name: Publish Docker image

on:
  push:
    branches:
      - docker

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: singh12345akshay/devops1
      
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    name: Pull Image and run conatiner
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Set up Docker
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get -y install docker.io
    #   if: success()

    # - name: Log in to Docker Hub
    #   run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
    #   if: success()
    - name: Log in to Docker Hub
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Pull Docker Image
      run: docker pull singh12345akshay/devops1:docker  # Replace with your Docker image details
      if: success()

  
    - name: Deploy to EC2
      run: |
          echo "EC2_USERNAME: ${{ secrets.EC2_USERNAME }}"
          echo "EC2_HOST: ${{ secrets.EC2_HOST }}"
          echo "KEY_PEM: ${{ secrets.KEY_PEM }}"
          ssh -i ${{ secrets.KEY_PEM }} ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} '
          docker pull singh12345akshay/devops1:docker &&
          docker stop my-container || true &&
          docker rm my-container || true &&
          docker run -d -p 80:8080 --name my-container singh12345akshay/devops1:docker

   
    # - name: SSH into EC2 and update the container
    #   uses: appleboy/ssh-action@v0.7.0
    #   with:
    #     host: ${{ secrets.EC2_HOST }}
    #     username: ${{ secrets.EC2_USERNAME }}
    #     key: ${{ secrets.KEY_PEM }}
    #     script: |
    #       docker pull singh12345akshay/devops:latest  # Replace with your Docker image details
    #       docker stop my-container || true
    #       docker rm my-container || true
    #       docker run -d -p 80:8080 --name my-container singh12345akshay/devops:latest 

    - name: Cleanup
      run: docker system prune -af
      if: always()

